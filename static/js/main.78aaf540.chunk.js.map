{"version":3,"sources":["ThreePointVis/Controls.js","ThreePointVis/layouts.js","ThreePointVis/InstancedPoints.js","ThreePointVis/Effects.js","ThreePointVis/ThreePointVis.js","App.js","index.js"],"names":["extend","TrackballControls","React","_ref","ref","Object","objectDestructuringEmpty","controls","_useThree","useThree","camera","gl","useFrame","current","update","resetCamera","target","set","position","up","up0","x","y","z","react","args","domElement","dynamicDampingFactor","keys","mouseButtons","LEFT","THREE","PAN","MIDDLE","ZOOM","RIGHT","ROTATE","useLayout","data","_ref$layout","layout","theta","i","length","datum","radius","Math","max","sqrt","asin","cos","sin","spiralLayout","numPoints","numCols","ceil","numRows","col","row","floor","gridLayout","useAnimatedLayout","_ref3","onFrame","_ref2","sourceX","sourceY","sourceZ","targetX","targetY","targetZ","useSourceTargetLayout","prevLayout","animProps","useSpring","animationProgress","from","reset","_ref4","progress","interpolateSourceTarget","scratchObject3D","updateInstancedMeshMatrices","mesh","_data$i","rotation","PI","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","scratchColor","InstancedPoints","selectedPoint","onSelectPoint","meshRef","_useMousePointInterac","mouseDownRef","handlePointerDown","e","clientX","clientY","handleClick","event","instanceId","pow","stopPropagation","point","console","log","useMousePointInteraction","_usePointColors","colorAttrib","colorArray","Float32Array","toArray","usePointColors","frustumCulled","onClick","onPointerDown","attach","attachObject","vertexColors","three","group","interpolate","distance","intensity","decay","color","Effects","composer","useRef","scene","size","aspect","useMemo","width","height","useEffect","setSize","render","bloom","resolution","strength","threshold","react_default","a","createElement","attachArray","FXAAShader","material-uniforms-resolution-value","renderToScreen","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","controlsRef","web","far","ThreePointVis_Controls","skyColor","groundColor","ThreePointVis_InstancedPoints","Array","fill","map","d","id","rootElement","document","getElementById","ReactDOM","_React$useState","_React$useState2","slicedToArray","setLayout","_React$useState3","_React$useState4","setSelectedPoint","visRef","className","src_ThreePointVis_ThreePointVis","undefined"],"mappings":"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","file":"static/js/main.78aaf540.chunk.js","sourcesContent":["import * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport * as THREE from 'three';\n\n// extend THREE to include TrackballControls\nextend({ TrackballControls });\n\n// key code constants\nconst ALT_KEY = 18;\nconst CTRL_KEY = 17;\nconst CMD_KEY = 91;\n\nconst Controls = ({}, ref) => {\n  const controls = React.useRef();\n  const { camera, gl } = useThree();\n\n  useFrame(() => {\n    // update the view as the vis is interacted with\n    controls.current.update();\n  });\n\n  React.useImperativeHandle(ref, () => ({\n    resetCamera: () => {\n      // reset look-at (target) and camera position\n      controls.current.target.set(0, 0, 0);\n      camera.position.set(0, 0, 80);\n\n      // needed for trackball controls, reset the up vector\n      camera.up.set(\n        controls.current.up0.x,\n        controls.current.up0.y,\n        controls.current.up0.z\n      );\n    },\n  }));\n\n  return (\n    <trackballControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      dynamicDampingFactor={0.1}\n      keys={[\n        ALT_KEY, // orbit\n        CTRL_KEY, // zoom\n        CMD_KEY, // pan\n      ]}\n      mouseButtons={{\n        LEFT: THREE.MOUSE.PAN, // make pan the default instead of rotate\n        MIDDLE: THREE.MOUSE.ZOOM,\n        RIGHT: THREE.MOUSE.ROTATE,\n      }}\n    />\n  );\n};\n\nexport default React.forwardRef(Controls);\n","import * as React from 'react';\nimport { useSpring } from 'react-spring/three';\n\nfunction gridLayout(data) {\n  const numPoints = data.length;\n  const numCols = Math.ceil(Math.sqrt(numPoints));\n  const numRows = numCols;\n\n  for (let i = 0; i < numPoints; ++i) {\n    const datum = data[i];\n    const col = (i % numCols) - numCols / 2;\n    const row = Math.floor(i / numCols) - numRows / 2;\n\n    datum.x = col * 1.05;\n    datum.y = row * 1.05;\n    datum.z = 0;\n  }\n}\n\nfunction spiralLayout(data) {\n  // equidistant points on a spiral\n  let theta = 0;\n  for (let i = 0; i < data.length; ++i) {\n    const datum = data[i];\n    const radius = Math.max(1, Math.sqrt(i + 1) * 0.8);\n    theta += Math.asin(1 / radius) * 1;\n\n    datum.x = radius * Math.cos(theta);\n    datum.y = radius * Math.sin(theta);\n    datum.z = 0;\n  }\n}\n\nexport const useLayout = ({ data, layout = 'grid' }) => {\n  React.useEffect(() => {\n    switch (layout) {\n      case 'spiral':\n        spiralLayout(data);\n        break;\n      case 'grid':\n      default: {\n        gridLayout(data);\n      }\n    }\n  }, [data, layout]);\n};\n\nfunction useSourceTargetLayout({ data, layout }) {\n  // prep for new animation by storing source\n  React.useEffect(() => {\n    for (let i = 0; i < data.length; ++i) {\n      data[i].sourceX = data[i].x || 0;\n      data[i].sourceY = data[i].y || 0;\n      data[i].sourceZ = data[i].z || 0;\n    }\n  }, [data, layout]);\n\n  // run layout\n  useLayout({ data, layout });\n\n  // store target\n  React.useEffect(() => {\n    for (let i = 0; i < data.length; ++i) {\n      data[i].targetX = data[i].x;\n      data[i].targetY = data[i].y;\n      data[i].targetZ = data[i].z;\n    }\n  }, [data, layout]);\n}\n\nfunction interpolateSourceTarget(data, progress) {\n  for (let i = 0; i < data.length; ++i) {\n    data[i].x = (1 - progress) * data[i].sourceX + progress * data[i].targetX;\n    data[i].y = (1 - progress) * data[i].sourceY + progress * data[i].targetY;\n    data[i].z = (1 - progress) * data[i].sourceZ + progress * data[i].targetZ;\n  }\n}\n\nexport function useAnimatedLayout({ data, layout, onFrame }) {\n  // compute layout remembering initial position as source and\n  // end position as target\n  useSourceTargetLayout({ data, layout });\n\n  // do the actual animation when layout changes\n  const prevLayout = React.useRef(layout);\n  const animProps = useSpring({\n    animationProgress: 1,\n    from: { animationProgress: 0 },\n    reset: layout !== prevLayout.current,\n    onFrame: ({ animationProgress }) => {\n      // interpolate based on progress\n      interpolateSourceTarget(data, animationProgress);\n      // callback to indicate data has updated\n      onFrame({ animationProgress });\n    },\n  });\n  prevLayout.current = layout;\n\n  return animProps;\n}\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useAnimatedLayout } from './layouts';\nimport { a } from 'react-spring/three';\n\n// re-use for instance computations\nconst scratchObject3D = new THREE.Object3D();\n\nfunction updateInstancedMeshMatrices({ mesh, data }) {\n  if (!mesh) return;\n\n  // set the transform matrix for each instance\n  for (let i = 0; i < data.length; ++i) {\n    const { x, y, z } = data[i];\n\n    scratchObject3D.position.set(x, y, z);\n    scratchObject3D.rotation.set(0.5 * Math.PI, 0, 0); // cylinders face z direction\n    scratchObject3D.updateMatrix();\n    mesh.setMatrixAt(i, scratchObject3D.matrix);\n  }\n\n  mesh.instanceMatrix.needsUpdate = true;\n}\n\nconst SELECTED_COLOR = '#6f6';\nconst DEFAULT_COLOR = '#888';\n\n// re-use for instance computations\nconst scratchColor = new THREE.Color();\n\nconst usePointColors = ({ data, selectedPoint }) => {\n  const numPoints = data.length;\n  const colorAttrib = React.useRef();\n  const colorArray = React.useMemo(() => new Float32Array(numPoints * 3), [\n    numPoints,\n  ]);\n\n  React.useEffect(() => {\n    for (let i = 0; i < data.length; ++i) {\n      scratchColor.set(\n        data[i] === selectedPoint ? SELECTED_COLOR : DEFAULT_COLOR\n      );\n      scratchColor.toArray(colorArray, i * 3);\n    }\n    colorAttrib.current.needsUpdate = true;\n  }, [data, selectedPoint, colorArray]);\n\n  return { colorAttrib, colorArray };\n};\n\nconst useMousePointInteraction = ({ data, selectedPoint, onSelectPoint }) => {\n  // track mousedown position to skip click handlers on drags\n  const mouseDownRef = React.useRef([0, 0]);\n  const handlePointerDown = e => {\n    mouseDownRef.current[0] = e.clientX;\n    mouseDownRef.current[1] = e.clientY;\n  };\n\n  const handleClick = event => {\n    const { instanceId, clientX, clientY } = event;\n    const downDistance = Math.sqrt(\n      Math.pow(mouseDownRef.current[0] - clientX, 2) +\n        Math.pow(mouseDownRef.current[1] - clientY, 2)\n    );\n\n    // skip click if we dragged more than 5px distance\n    if (downDistance > 5) {\n      event.stopPropagation();\n      return;\n    }\n\n    // index is instanceId if we never change sort order\n    const index = instanceId;\n    const point = data[index];\n\n    console.log('got point =', point);\n    // toggle the point\n    if (point === selectedPoint) {\n      onSelectPoint(null);\n    } else {\n      onSelectPoint(point);\n    }\n  };\n\n  return { handlePointerDown, handleClick };\n};\n\nconst InstancedPoints = ({ data, layout, selectedPoint, onSelectPoint }) => {\n  const meshRef = React.useRef();\n  const numPoints = data.length;\n\n  // run the layout, animating on change\n  const { animationProgress } = useAnimatedLayout({\n    data,\n    layout,\n    onFrame: () => {\n      updateInstancedMeshMatrices({ mesh: meshRef.current, data });\n    },\n  });\n\n  // update instance matrices only when needed\n  React.useEffect(() => {\n    updateInstancedMeshMatrices({ mesh: meshRef.current, data });\n  }, [data, layout]);\n\n  const { handleClick, handlePointerDown } = useMousePointInteraction({\n    data,\n    selectedPoint,\n    onSelectPoint,\n  });\n  const { colorAttrib, colorArray } = usePointColors({ data, selectedPoint });\n\n  return (\n    <>\n      <instancedMesh\n        ref={meshRef}\n        args={[null, null, numPoints]}\n        frustumCulled={false}\n        onClick={handleClick}\n        onPointerDown={handlePointerDown}\n      >\n        <cylinderBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.15, 32]}>\n          <instancedBufferAttribute\n            ref={colorAttrib}\n            attachObject={['attributes', 'color']}\n            args={[colorArray, 3]}\n          />\n        </cylinderBufferGeometry>\n        <meshStandardMaterial\n          attach=\"material\"\n          vertexColors={THREE.VertexColors}\n        />\n      </instancedMesh>\n      {selectedPoint && (\n        <a.group\n          position={animationProgress.interpolate(() => [\n            selectedPoint.x,\n            selectedPoint.y,\n            selectedPoint.z,\n          ])}\n        >\n          <pointLight\n            distance={9}\n            position={[0, 0, 0.3]}\n            intensity={2.2}\n            decay={30}\n            color=\"#3f3\"\n          />\n          <pointLight\n            position={[0, 0, 0]}\n            decay={1}\n            distance={5}\n            intensity={1.5}\n            color=\"#2f0\"\n          />\n        </a.group>\n      )}\n    </>\n  );\n};\n\nexport default InstancedPoints;\n","import * as THREE from 'three';\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass });\n\nexport default function Effects() {\n  const composer = useRef();\n  const { scene, gl, size, camera } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [\n    size,\n  ]);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [\n    size,\n  ]);\n  useFrame(() => composer.current.render(), 1);\n\n  const bloom = {\n    resolution: aspect,\n    strength: 0.6,\n    radius: 0.01,\n    threshold: 0.4,\n  };\n\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n\n      <unrealBloomPass\n        attachArray=\"passes\"\n        args={[bloom.resolution, bloom.strength, bloom.radius, bloom.threshold]}\n      />\n      <shaderPass\n        attachArray=\"passes\"\n        args={[FXAAShader]}\n        material-uniforms-resolution-value={[1 / size.width, 1 / size.height]}\n        renderToScreen\n      />\n    </effectComposer>\n  );\n}\n","import * as React from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport Controls from './Controls';\nimport InstancedPoints from './InstancedPoints';\nimport Effects from './Effects';\n\nconst ThreePointVis = ({ data, layout, selectedPoint, onSelectPoint }, ref) => {\n  const controlsRef = React.useRef();\n  React.useImperativeHandle(ref, () => ({\n    resetCamera: () => {\n      return controlsRef.current.resetCamera();\n    },\n  }));\n\n  return (\n    <Canvas camera={{ position: [0, 0, 80], far: 15000 }}>\n      <Controls ref={controlsRef} />\n      <ambientLight color=\"#ffffff\" intensity={0.1} />\n      <hemisphereLight\n        color=\"#ffffff\"\n        skyColor=\"#ffffbb\"\n        groundColor=\"#080820\"\n        intensity={1.0}\n      />\n      <InstancedPoints\n        data={data}\n        layout={layout}\n        selectedPoint={selectedPoint}\n        onSelectPoint={onSelectPoint}\n      />\n      <Effects />\n    </Canvas>\n  );\n};\n\nexport default React.forwardRef(ThreePointVis);\n","import * as React from 'react';\nimport ThreePointVis from './ThreePointVis/ThreePointVis';\nimport './styles.css';\n\nconst data = new Array(10000).fill(0).map((d, id) => ({ id }));\n\nexport default function App() {\n  const [layout, setLayout] = React.useState('grid');\n  const [selectedPoint, setSelectedPoint] = React.useState(null);\n\n  const visRef = React.useRef();\n  const handleResetCamera = () => {\n    visRef.current.resetCamera();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"vis-container\">\n        <ThreePointVis\n          ref={visRef}\n          data={data}\n          layout={layout}\n          selectedPoint={selectedPoint}\n          onSelectPoint={setSelectedPoint}\n        />\n      </div>\n      <button className=\"reset-button\" onClick={handleResetCamera}>\n        Reset Camera\n      </button>\n      <div className=\"controls\">\n        <strong>Layouts</strong>{' '}\n        <button\n          onClick={() => setLayout('grid')}\n          className={layout === 'grid' ? 'active' : undefined}\n        >\n          Grid\n        </button>\n        <button\n          onClick={() => setLayout('spiral')}\n          className={layout === 'spiral' ? 'active' : undefined}\n        >\n          Spiral\n        </button>\n        {selectedPoint && (\n          <div className=\"selected-point\">\n            You selected <strong>{selectedPoint.id}</strong>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}